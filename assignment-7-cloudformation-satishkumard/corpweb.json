{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "engineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "Tags" : [{"Key" : "Name", "Value" : "engineeringVpc" }]
      }
    },
    "publicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "engineeringVpc" },
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone" : "us-east-1a",
        "Tags" : [{"Key" : "Name", "Value" : "publicSubnet1" }]
      }
    },
    "publicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "engineeringVpc" },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone" : "us-east-1b",
        "Tags" : [{"Key" : "Name", "Value" : "publicSubnet2" }]
      }
    },
    "webserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "engineeringVpc"
        },
        "GroupDescription": "Allow access from HTTP and SSH traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "YourIp"}
          }
        ],
        "Tags" : [{"Key" : "Name", "Value" : "webserversSG" }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "engineeringVpc"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "engineeringVpc"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "InternetGateway",
        "VPCGatewayAttachment"
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }

    },
    "publicSubnet1RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet1"
        }
      }
    },
    "publicSubnet2RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "publicSubnet2"
        }
      }
    },
    "web1": {
      "Type" : "AWS::EC2::Instance",
      "DependsOn": [
        "webserversSG"
      ],
      "Properties" : {
        "ImageId" : "ami-3ea13f29",
        "KeyName" : { "Ref" : "KeyPair" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : [{ "Ref" : "webserversSG" }],
          "SubnetId" : { "Ref" : "publicSubnet1" }
          } ],
        "InstanceType" : { "Ref" : "InstanceType" } ,
        "Tags" : [{"Key" : "Name", "Value" : "web1" }]
      }
    },
    "web2": {
      "Type" : "AWS::EC2::Instance",
      "DependsOn": [
        "webserversSG"
      ],
      "Properties" : {
        "ImageId" : "ami-3ea13f29",
        "KeyName" : { "Ref" : "KeyPair" },
        "NetworkInterfaces": [ {
          "AssociatePublicIpAddress": "true",
          "DeviceIndex": "0",
          "GroupSet" : [{ "Ref" : "webserversSG" }],
          "SubnetId" : { "Ref" : "publicSubnet2" }
          } ],
        "InstanceType" : { "Ref" : "InstanceType" },
        "Tags" : [{"Key" : "Name", "Value" : "web2" }]
        }
    },
    "engineeringLB" : {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme" : "internet-facing",
        "Subnets" : [ {"Ref": "publicSubnet1"}, {"Ref" : "publicSubnet2"}],
        "SecurityGroups": [{"Ref": "webserversSG"}],
        "Tags" : [{"Key" : "Name", "Value" : "engineeringLB" }]
      }
    },
    "TargetGroup" : {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "HealthCheckPath": "/",
        "HealthCheckPort": 80,
        "HealthCheckProtocol": "HTTP",
        "Name": "engineeringWebservers",
        "Port": 80,
        "Protocol": "HTTP",
        "Targets": [
            { "Id": {"Ref" : "web1"}, "Port": 80 },
            { "Id": {"Ref" : "web2"}, "Port": 80 }
          ],
        "VpcId": {"Ref" : "engineeringVpc"},
        "Tags" : [{"Key" : "Name", "Value" : "engineeringWebservers" }]
        }
      },
      "Listener": {
        "Type": "AWS::ElasticLoadBalancingV2::Listener",
        "Properties": {
          "DefaultActions": [{
            "Type": "forward",
            "TargetGroupArn": { "Ref": "TargetGroup" }
            }],
            "LoadBalancerArn": { "Ref": "engineeringLB" },
            "Port": "80",
            "Protocol": "HTTP"
          }
        }
  },
  "Parameters": {
    "KeyPair": {
      "Description": "Name of your EC2 KeyPair to enable SSH access to the instances.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "YourIp": {
      "Description": "The current CIDR IP address of your workstation (x.x.x.x/32).",
      "Type": "String"
    },
    "InstanceType": {
      "Description": "Server instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 type."
    }
  },
  "Outputs": {
    "weburl": {
      "Value": {
              "Fn::GetAtt": [
                "engineeringLB",
                "DNSName"
              ]
      },
      "Description": "LoadBalancer DNSName"
    }
  }
}
